<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring.mapper.AjaxMapper">
	
	<select id = "isAlreadyLiked" parameterType = "hashmap" resultType = "int">
		select count(*) from gl_liked
		 where member_id=#{id} and entity_number=#{entity}
	</select>
	
	<insert id = "insertLikedUser" parameterType = "hashmap">
		insert into gl_liked(member_id, entity_number) values(#{id}, #{entity})
	</insert>
	
	<delete id = "deleteLikedUser" parameterType = "hashmap">
		delete from gl_liked  where member_id=#{id} and entity_number=#{entity}
	</delete>
	
	<update id = "increaseLike" parameterType = "hashmap">
		update gl_productboard
		 set pb_like=pb_like+1
		  where entity_number = #{entity}
	</update>
	
	<update id = "decreaseLike" parameterType = "hashmap">
		update gl_productboard
		 set pb_like=pb_like-1
		  where entity_number = #{entity}
	</update>
	
	
	<!-- 쿠폰 -->
	<resultMap id = "CouponVOMap" type = "com.spring.goodluxe.voes.CouponVO">
		<result property = "coupon_number" column = "coupon_number"/>
		<result property = "coupon_type" column = "coupon_type"/>
		<result property = "coupon_expire" column = "coupon_expire"/>
		<result property = "coupon_status" column = "coupon_status"/>
		<result property = "member_id" column = "member_id"/>
	</resultMap>
	
	
	<select id = "defaultCouponList"  resultMap = "CouponVOMap">
		select * from gl_coupon
	</select>
	
	<select id = "allmemberCouponList" parameterType = "com.spring.goodluxe.voes.CouponVO" resultMap = "CouponVOMap">
		select * from gl_coupon where 1=1 
		<if test = "coupon_type != '전체'">
			and coupon_type = #{coupon_type}
		</if>
		<if test = "coupon_status =='사용전'"> and coupon_status = #{coupon_status} </if>
		<if test = "coupon_status =='사용후'"> and coupon_status = #{coupon_status} </if>			
	</select>
	<select id = "onememberCouponList" parameterType = "com.spring.goodluxe.voes.CouponVO" resultMap = "CouponVOMap">
		select * from gl_coupon where member_id = #{member_id}
		<if test = "coupon_type != '전체'">
			and coupon_type = #{coupon_type}
		</if>
		<if test = "coupon_status =='사용전'"> and coupon_status = #{coupon_status} </if>
		<if test = "coupon_status =='사용후'"> and coupon_status = #{coupon_status} </if>			
	</select>
	
	<delete id = "deleteCouponList" parameterType = "hashmap">
		delete from gl_coupon where coupon_number = #{coupon_number}
	</delete>
	
	
	
	<!-- 회원관리 -->
	
	<resultMap id = "adminMemberMapVO" type = "java.util.HashMap">
		<result property = "member_id" column = "member_id"/>
		<result property = "member_name" column = "member_name"/>
		<result property = "member_phone" column = "member_phone"/>
		<result property = "member_email" column = "member_email"/>
		<result property = "member_class" column = "member_class"/>
	</resultMap>

	<select id = "getAllMemberinfo" resultMap = "adminMemberMapVO">
		select member_id, member_name, member_phone, member_email , member_class from gl_member
	</select>
	
	
	<select id = "getAMemberinfo" parameterType = "hashmap" resultMap = "adminMemberMapVO">
		select * from gl_member where member_id = #{member_id}
	</select>
	<select id = "isBlack"  parameterType = "hashmap" resultType = "String"> 
		select member_class from gl_member where member_id = #{member_id}
	</select>
	<update id = "setBlackClass" parameterType = "hashmap">
		update gl_member set member_class ='B' where member_id = #{member_id}
	</update>
	<update id = "setWhiteClass" parameterType = "hashmap">
		update gl_member set member_class ='Y' where member_id = #{member_id}
	</update>

	<!-- 주문관리 -->
	<resultMap id = "adminOrderMap" type = "com.spring.goodluxe.voes.OrderVO">
		<result property = "order_number" column = "order_number"/>
		<result property = "order_receipt" column = "order_receipt"/>
		<result property = "order_pay_date" column = "order_pay_date"/>
		<result property = "order_order_date" column = "order_order_date"/>
		<result property = "order_confirm" column = "order_confirm"/>
		<result property = "order_status" column = "order_status"/>
		<result property = "order_addr1" column = "order_addr1"/>
		<result property = "order_addr2" column = "order_addr2"/>
		<result property = "order_phone" column = "order_phone"/>
		<result property = "order_zipcode" column = "order_zipcode"/>
		<result property = "order_invoice_number" column = "order_invoice_number"/>
		<result property = "order_ship_date" column = "order_ship_date"/>
		<result property = "order_cancel_date" column = "order_cancel_date"/>
		<result property = "order_product_price" column = "order_product_price"/>
		<result property = "order_ship_fee" column = "order_ship_fee"/>
		<result property = "order_used_point" column = "order_used_point"/>
		<result property = "order_used_coupon" column = "order_used_coupon"/>
		<result property = "order_pay_system" column = "order_pay_system"/>
		<result property = "order_refund_account" column = "order_refund_account"/>
		<result property = "order_message" column = "order_message"/>
		<result property = "pb_number" column = "pb_number"/>
		<result property = "member_id" column = "member_id"/>
	</resultMap>
	
	<select id = "getAllOrderList" parameterType = "hashmap" resultMap = "adminOrderMap">
		select * from gl_order order by order_order_date desc
	</select>
	<select id = "getOrderListOrdernumber" parameterType = "hashmap" resultMap = "adminOrderMap">
		select * from gl_order where order_number = #{order_number}
			 
	</select>
	<select id = "getOrderList" parameterType = "hashmap" resultMap = "adminOrderMap">
		select * from gl_order where 1=1
		
		
		<if test = "period=='today'">
			and order_order_date 
				between to_timestamp(sysdate-1 ||'14:00:00','YY/MM/DD HH24:MI:SS') 
				and to_timestamp( sysdate ||'14:00:00','YY/MM/DD HH24:MI:SS') 
		</if>
		<if test = "period=='yesterday'">
			and order_order_date 
				between to_timestamp(sysdate-2 ||'14:00:00','YY/MM/DD HH24:MI:SS') 
				and to_timestamp( sysdate-1 ||'14:00:00','YY/MM/DD HH24:MI:SS') 
		</if>
		<if test = "period=='week'">
			and order_order_date 
				between to_timestamp(sysdate-7 ||'14:00:00','YY/MM/DD HH24:MI:SS') 
				and to_timestamp( sysdate ||'14:00:00','YY/MM/DD HH24:MI:SS') 
		</if>
		<if test = "period=='month'">
			and order_order_date 
				between to_timestamp(sysdate-30 ||'14:00:00','YY/MM/DD HH24:MI:SS') 
				and to_timestamp( sysdate ||'14:00:00','YY/MM/DD HH24:MI:SS') 
		</if>
		<if test = "period =='write'">
			and order_order_date between #{date_start} and #{date_end}
		</if>
		
		<if test = "check_order_status!=null">
			and order_status in
			<foreach collection='check_order_status' index='index' item='item' open='(' close =')' separator=',' > 
				#{item}
			</foreach>
		</if>
		<if test = "is_payed == 'beforeP'">
			and order_status = '입금전'
		</if>
		<if test = "is_payed != 'beforeP'">
			and order_status != '입금전'
		</if>
		
		<if test = "is_canceled=='cancelY' ">
			and order_status != '취소완료'
		</if> 

	</select>
	<select id = "getOrderListCanceled" parameterType = "hashmap" resultMap = "adminOrderMap">
		select * from gl_order where order_status = '취소완료'
	</select>
	
	<update id = "orderChangeStatusStartShipping" parameterType = "String">
		update gl_order set order_status = '배송중' where order_number = #{chekd}
	</update>
	
	<update id = "adminOrderSetEndShipping" parameterType = "String">
		update gl_order set order_status = '판매완료' where order_number = #{order_number}
	</update>
	<update id = "adminOrderSetStartShipping" parameterType = "hashMap">
		update gl_order 
		set order_status = '배송중' , order_ship_date = sysdate , order_invoice_number = #{order_invoice_number}
		where order_number = #{order_number}
	</update>
	
	
	
	
	<!-- 상품관리-->
	<resultMap id = "adminPurcProductMap" type = "java.util.HashMap">
		<result property = "entity_number" column = "entity_number"/>
		<result property = "pd_name" column = "pd_name"/>
		<result property = "pd_brand" column = "pd_brand"/>
		<result property = "pd_category" column = "pd_category"/>
		<result property = "quality_grade" column = "quality_grade"/>
		<result property = "appraise_exist" column = "appraise_exist"/>
		<result property = "pd_component" column = "pd_component"/>
		<result property = "sale_price" column = "sale_price"/>
		<result property = "buying_price" column = "buying_price"/>
		<result property = "purc_date" column = "purc_date"/>
		<result property = "member_id" column = "member_id"/>
		<result property = "pb_sale_status" column = "pb_sale_status"/>
		<result property = "pb_post_status" column = "pb_post_status"/>
	</resultMap>
	<resultMap id = "adminConsProductMap" type = "java.util.HashMap">
		<result property = "entity_number" column = "entity_number"/>
		<result property = "pd_name" column = "pd_name"/>
		<result property = "pd_brand" column = "pd_brand"/>
		<result property = "pd_category" column = "pd_category"/>
		<result property = "quality_grade" column = "quality_grade"/>
		<result property = "appraise_exist" column = "appraise_exist"/>
		<result property = "pd_component" column = "pd_component"/>
		<result property = "sale_price" column = "sale_price"/>
		<result property = "commission" column = "commission"/>
		<result property = "start_date" column = "start_date"/>
		<result property = "end_date" column = "end_date"/>
		<result property = "member_id" column = "member_id"/>
		<result property = "pb_sale_status" column = "pb_sale_status"/>
		<result property = "pb_post_status" column = "pb_post_status"/>
	</resultMap>
	<select id = "adminAllProductListPurchase" resultMap = "adminPurcProductMap">
		select gl_purchase.entity_number, pd_name, pd_brand, pd_category, quality_grade, appraise_exist, pd_component,
			sale_price, buying_price, purc_date, member_id, pb_sale_status, pb_post_status 
		from gl_purchase, gl_productboard
		where gl_purchase.entity_number = gl_productboard.entity_number
	</select>
	<select id = "adminAllProductListConsign" resultMap = "adminConsProductMap">
		select gl_consignment.entity_number, pd_name, pd_brand, pd_category, quality_grade, appraise_exist, pd_component,
			sale_price, commission, start_date, end_date, member_id, pb_sale_status, pb_post_status
		from gl_consignment, gl_productboard
		where gl_consignment.entity_number = gl_productboard.entity_number
	</select>
 	<select id = "adminProductListPurc" parameterType = "hashMap" resultMap = "adminPurcProductMap" >
		select *
		from (select gl_purchase.entity_number, pd_name, pd_brand, pd_category, quality_grade, appraise_exist, pd_component,
						sale_price, buying_price, purc_date, member_id, pb_sale_status, pb_post_status
					from gl_purchase, gl_productboard
					where gl_purchase.entity_number = gl_productboard.entity_number)
			where 1=1 
			<if test = "pb_post_status!='all'">
				and pb_post_status = #{pb_post_status}
			</if>
			<if test = "pb_sale_status!='all'">
				and pb_sale_status = #{pb_sale_status}
			</if>
			
	</select>
	<select id = "adminProductListCons" parameterType = "hashMap" resultMap = "adminConsProductMap" >
		select * from (select gl_consignment.entity_number, pd_name, pd_brand, pd_category, quality_grade, appraise_exist, pd_component,
						sale_price, commission, start_date, end_date, member_id, pb_sale_status, pb_post_status
					from gl_consignment, gl_productboard
					where gl_consignment.entity_number = gl_productboard.entity_number)
			where 1=1 
			<if test = "pb_post_status!='all'">
				and pb_post_status = #{pb_post_status}
			</if>
			<if test = "pb_sale_status!='all'">
				and pb_sale_status = #{pb_sale_status}
			</if>
	</select>
	<select id = "adminProductListPurcEnNo" parameterType = "hashMap" resultMap = "adminPurcProductMap" >
		select * from (select gl_purchase.entity_number, pd_name, pd_brand, pd_category, quality_grade, appraise_exist, pd_component,
						sale_price, buying_price, purc_date, member_id, pb_sale_status, pb_post_status
					from gl_purchase, gl_productboard
					where gl_purchase.entity_number = gl_productboard.entity_number)
			where entity_number=#{entity_number}
	</select>
	<select id = "adminProductListConsEnNo" parameterType = "hashMap" resultMap = "adminConsProductMap" >
		select * 
			from (select gl_consignment.entity_number, pd_name, pd_brand, pd_category, quality_grade, appraise_exist, pd_component,
						sale_price, commission, start_date, end_date, member_id, pb_sale_status, pb_post_status
					from gl_consignment, gl_productboard
					where gl_consignment.entity_number = gl_productboard.entity_number)
			where entity_number=#{entity_number}
			
			
	</select>
	<select id = "checkNowPostStatus" parameterType = "String" resultType = "String">
		select pb_post_status from gl_productboard where entity_number = #{entity_number}
	</select>
	<update id = "changeOffBoard" parameterType = "String">
		update gl_productboard set pb_post_status = '게시안함' where entity_number=#{entity_number} 
	</update>
	<update id = "changeOnBoard" parameterType = "String">
		update gl_productboard set pb_post_status = '게시중' where entity_number=#{entity_number} 
	</update>
	<select id = "checkNowSaleStatus" parameterType = "String" resultType = "String">
		select pb_sale_status from gl_productboard where entity_number = #{entity_number}
	</select>
	<update id = "chgSaleStatOnsale" parameterType = "String">
		update gl_productboard set pb_sale_status = '거래진행중' where entity_number = #{entity_number}
	</update>
	<update id = "chgSaleStatOndeal" parameterType = "String">
		update gl_productboard set pb_sale_status = '판매완료' where entity_number = #{entity_number}
	</update>
	<update id = "chgSaleStatSoldout" parameterType = "String">
		update gl_productboard set pb_sale_status = '판매중' where entity_number = #{entity_number}
	</update>
	<select id = "getDivision" parameterType = "hashMap" resultType = "String">
		select pb_division from gl_productboard where entity_number = #{entity_number}
	</select>
	<delete id = "deletePurchaseInfo" parameterType = "hashMap">
		delete from gl_purchase where entity_number = #{entity_number}
	</delete>
 	<delete id = "deleteConsignmentInfo" parameterType = "hashMap">
		delete from gl_consignment where entity_number = #{entity_number}
	</delete> 
	<delete id = "deleteProductList" parameterType = "hashMap">
		delete from gl_productboard where entity_number = #{entity_number}	
	</delete>
	
	<!-- 환불 -->
	<select id = "getReturnList" resultMap = "adminOrderMap">
		select * from gl_order where order_status = '환불신청' or order_status = '반품확인' or order_status = '환불완료'
	</select>
	<select id = "getDetailReturndList" parameterType = "String" resultMap = "adminOrderMap">
		select * from gl_order where order_status = #{orderstatus}
	</select>
	<update id = "setReturnConfirm" parameterType = "String">
		update gl_order set order_status = '반품확인' where order_number = #{order_number}
	</update>
	<update id = "setReturnFinished" parameterType = "String">
		update gl_order set order_status = '환불완료' where order_number = #{order_number}
	</update>
	<update id = "setPostStatusBackToSale" parameterType = "String">
		update gl_productboard set pb_sale_status = '판매중' , pb_post_status = '게시중'
		where pb_number in(select pb_number from gl_order where order_number = #{order_number} )
	</update>

</mapper>