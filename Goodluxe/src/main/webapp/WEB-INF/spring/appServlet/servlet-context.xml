<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xmlns:beans="http://www.springframework.org/schema/beans"
   xmlns:context="http://www.springframework.org/schema/context"
   xmlns:websocket="http://www.springframework.org/schema/websocket"
   xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
      http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
      http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
      http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket.xsd"
      >
      


<!-- jaejin -->
<!-- <beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket.xsd">
 -->
	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />
	<!-- jaejin -->
<!-- 	<websocket:handlers>
		<websocket:mapping handler="myHandler" path="/echo.do"/>
		<websocket:handshake-interceptors>
			<beans:bean class="org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor" />
		</websocket:handshake-interceptors>
	</websocket:handlers>
	
	<beans:bean id="myHandler" class="com.spring.goodluxe.jj.WebSocket" /> -->
	
	<!-- WebSocket에 사용할 핸들러 객체 생성 -->
	<beans:bean id="socketHandler" class="com.spring.goodluxe.jj.SocketHandler"  />
	
	<websocket:handlers>
		<!-- path : websocket 사용할 때 url 형식 -->
		<websocket:mapping path="/broadcasting.do" handler="socketHandler" />
		<websocket:handshake-interceptors>
			<!-- Websocket에서 HttpSession 객체를 사용하고자 할 때 사용 -->
			<beans:bean class="com.spring.goodluxe.jj.HandShakeInterceptor" />
		</websocket:handshake-interceptors>
	</websocket:handlers>
	
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<!-- 멀티파트(파일업로드) 관련 빈 설정 -->
	<!-- Multipart지원 기능을 사용하려면 먼저 MultipartResolver를 스프링 설정 파일에 등록. -->
	<!--  *DispatcherServlet은 이름이 "multipartResolver"인 빈을 사용하기 때문에 다른 이름(아이디)을 지정할 경우  MultipartResolver로 사용되지 않음. -->
	<beans:bean id = "multipartResolver" class = "org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name = "maxUploadSize" value = "10000000" ><!-- value는 10000000바이트를 의미한다.  -->
		
		</beans:property>
		<beans:property name = "uploadTempDir" value = "file:/C:/Project138/upload"></beans:property> <!--여러명이 한번에 동시업로드 할 때 효율성에 대비해서 임시 저장기억공간을 지정한다. -->
	</beans:bean>

	<!-- NaverLoginBO Class에 대한 Bean설정 추가 -->
	<beans:bean id="naverLoginBO" class="com.spring.goodluxe.mj.NaverLoginBO" />
	
	<!-- 멀티파트(파일업로드) 관련 빈 설정 -->
	<!-- Multipart지원 기능을 사용하려면 먼저 MultipartResolver를 스프링 설정 파일에 등록. -->
	<!--  *DispatcherServlet은 이름이 "multipartResolver"인 빈을 사용하기 때문에 다른 이름(아이디)을 지정할 경우  MultipartResolver로 사용되지 않음. -->
	<beans:bean id = "multipartResolver" class = "org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name = "maxUploadSize" value = "10000000" ><!-- value는 10000000바이트를 의미한다.  -->
		</beans:property>
		<beans:property name = "uploadTempDir" value = "file:/C:/Project138/upload"></beans:property> <!--여러명이 한번에 동시업로드 할 때 효율성에 대비해서 임시 저장기억공간을 지정한다. -->
	</beans:bean>
	
	<context:component-scan base-package="com.spring.goodluxe" />
	<context:component-scan base-package="com.spring.goodluxe.jj" />
	
	
	
	
</beans:beans>
